{"version":3,"sources":["webpack:///./src/components/socialLinks.js","webpack:///./src/components/banner.js","webpack:///./src/components/container.js","webpack:///./src/components/content.js","webpack:///./src/components/image.js","webpack:///./src/components/Project.js","webpack:///./src/components/projects.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["SocialLinks","react_default","a","createElement","href","target","index_es","icon","faLinkedin","faGithub","Banner","_ref","bannerTitle","tagLine","gatsby_browser_entry","query","render","data","imageData","desktop","childImageSharp","fluid","gatsby_background_image_default","Tag","className","bannerStyle","banner","backgroundColor","title","socialLinks","_970159585","propTypes","PropTypes","string","defaultProps","Container","children","Fragment","containerStyle","container","node","isRequired","Content","contentStyle","content","Image","props","console","log","file","images","edges","find","image","relativePath","src","gatsby_image_default","_799458165","Project","project","style","position","link","components_image","projects","desc","Projects","map","i","components_Project","key","IndexPage","layout","seo","keywords","components_projects","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","object","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","property","author","concat","length","join","arrayOf","Header","_this","_React$Component","call","this","state","handleScroll","bind","assertThisInitialized_default","setState","scroll","window","scrollY","el","document","querySelector","componentDidMount","addEventListener","siteTitle","headerStyle","header","Component","Layout","layoutStyle","Date","getFullYear","_755544856"],"mappings":"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","file":"component---src-pages-index-js-f35e9cf2a437104c198a.js","sourcesContent":["import React from \"react\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faGithub, faLinkedin } from \"@fortawesome/free-brands-svg-icons\"\n\nconst SocialLinks = () => (\n  <div>\n    <a href=\"https://www.linkedin.com/in/scott-livingstone/\" target=\"_blank\"><FontAwesomeIcon icon={faLinkedin}/></a>\n    <a href=\"https://github.com/scottliv\"><FontAwesomeIcon icon={faGithub}/></a>\n  </div>\n)\n\nexport default SocialLinks","import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport SocialLinks from \"./socialLinks\"\nimport { graphql, StaticQuery } from \"gatsby\"\nimport BackgroundImage from \"gatsby-background-image\"\nimport bannerStyle from \"../styles/banner.module.scss\"\n\nconst Banner = ({ bannerTitle, tagLine }) => (\n\n\n  <StaticQuery query={graphql`\n      query {\n        desktop: file(relativePath: { eq: \"banner-background.jpg\" }) {\n          childImageSharp {\n            fluid(quality: 90, maxWidth: 4160) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    `}\n               render={data => {\n                 // Set ImageData.\n                 const imageData = data.desktop.childImageSharp.fluid\n                 return (\n                   <BackgroundImage Tag=\"section\"\n                                    className={bannerStyle.banner}\n                                    fluid={imageData}\n                                    backgroundColor={`#040e18`}\n                   >\n                     <div>\n                       <h1 className={bannerStyle.title}>\n                         {bannerTitle}\n                       </h1>\n                       <p>\n                         {tagLine}\n                       </p>\n                       <SocialLinks/>\n                     </div>\n                   </BackgroundImage>\n                 )\n               }\n               }\n\n  />\n\n\n  // <section className={bannerStyle.banner}>\n  //   <div>\n  //     <h1 className={bannerStyle.bannerTitle}>\n  //         {bannerTitle}\n  //     </h1>\n  //     <p>\n  //       {tagLine}\n  //     </p>\n  //     <SocialLinks/>\n  //   </div>\n  // </section>\n)\n\nBanner.propTypes = {\n  bannerTitle: PropTypes.string,\n  tagLine: PropTypes.string,\n}\n\nBanner.defaultProps = {\n  bannerTitle: ``,\n  tagLine: ``,\n}\n\nexport default Banner","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport containerStyle from \"../styles/container.module.scss\"\n\nconst Container = ({ children }) => (\n\n      <>\n        <section className={containerStyle.container}>{children}</section>\n      </>\n\n)\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Container\n","import React from 'react';\nimport contentStyle from '../styles/content.module.scss';\n\nconst Content = () => (\n  <div className={contentStyle.content}>\n      <h2>About</h2>\n\n      <p>\n        I'm a web developer who loves building and fixing things.\n        I enjoy making useful things for people to enjoy and I love finding solutions to problems with code.\n      </p>\n  </div>\n);\n\nexport default Content;","import React from \"react\"\nimport Img from \"gatsby-image\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction renderImage(file) {\n  return file && <Img fluid={file.node.childImageSharp.fluid}/>;\n}\n\nconst Image = function(props) {\n  console.log(props);\n  return <StaticQuery\n    query={graphql`\n      query {\n      images: allFile(filter:{ extension: { regex: \"/jpeg|jpg|png|gif/\"}}) {\n      edges {\n        node {\n          extension\n          relativePath\n          childImageSharp {\n            fluid(maxWidth: 1000) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n    }\n    `}\n    render={({ images }) => renderImage(images.edges.find(image => image.node.relativePath === props.src))}\n  />\n}\nexport default Image;","import React from \"react\"\nimport Image from \"./image\"\n\nconst Project = ({ project }) => (\n  <article style={{ position: `relative` }}>\n    <a href={project.link} target=\"_blank\">\n      <Image src={project.image}/>\n    </a>\n  </article>\n)\n\nexport default Project","import React from 'react';\nimport Project from './Project';\n\nconst projects = [\n  {\n    title: 'Shark Club',\n    link: 'https://www.sharkclub.com',\n    desc:\n      'A web app that lets users search for all kinds of recipes from around the world. Fetches data using the Edaman API. Built with React, Redux, and Bootstrap',\n    image: 'sharkclub.png'\n  },\n  {\n    title: 'Pearl Of Burgundy',\n    link: 'https://www.pearlofburgundy.com/',\n    desc:\n      'A brochure site aimed to promote tourism in Dumaguete City Philippines. Built with React, Sass and Bootstrap.',\n    image: 'pob.png'\n  },\n  {\n    title: 'Inclusion BC',\n    link: 'https://inclusionbc.org/',\n    desc:\n      'An e-commerce app that lets users filter through items in real-time using multiple filters (e.g. type, color, size, price). Built with React, Redux, and Sass',\n\n    image: 'inclusion.png'\n  },\n  {\n    title: 'Sue Hollis',\n    link: 'https://www.suehollis.com/',\n    desc:\n      'A web app that lets customers customize their burgers by adding the ingredients they want. Built with React',\n    image: 'suehollis.png'\n  },\n];\n\nconst Projects = props => {\n  return (\n    <section className=\"projects\">\n        {projects.map((project, i) => {\n          return <Project key={i} project={project} />;\n        })}\n    </section>\n  );\n};\nexport default Projects;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport Banner from \"../components/banner\";\nimport Container from \"../components/container\";\nimport Content from \"../components/content\";\nimport Projects from \"../components/projects\";\nimport Image from \"../components/image\";\nimport SEO from \"../components/seo\";\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n    <Banner bannerTitle={\"Web Developer\"} tagLine={\"Based in Vancouver, BC\"} />\n    <Container>\n      <Content />\n      <Projects />\n      <Image />\n    </Container>\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport headerStyle from \"../styles/header.module.scss\"\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  handleScroll() {\n    this.setState({ scroll: window.scrollY });\n    const el = document.querySelector(\"header\");\n    if (this.state.scroll > 0) {\n\n      el.style.backgroundColor = \"black\";\n    }\n    else {\n      el.style.backgroundColor = \"transparent\";\n    }\n\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.handleScroll)\n  }\n\n\n  render() {\n    const {siteTitle} = this.props;\n    return (\n      <header className={headerStyle.header}>\n        <div className={headerStyle.container}>\n          <h1 className={headerStyle.title}>\n            <a href=\"mailto:scottlivingstone@gmail.com\">\n              {siteTitle}\n            </a>\n          </h1>\n        </div>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./normailize.css\"\nimport layoutStyle from \"../styles/layout.module.scss\"\n\nconst handleScroll = () => {\n  console.log(\"hi\");\n}\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} handleScroll={handleScroll}/>\n        <div\n          className={layoutStyle.layout}\n        >\n          <main>{children}</main>\n          <footer>\n            © {new Date().getFullYear()}\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}